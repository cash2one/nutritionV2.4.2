<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jumper.weight.nutrition.user.mapper.HospitalOutpatientMapper">
	<resultMap id="BaseResultMap" type="com.jumper.weight.nutrition.user.entity.HospitalOutpatient">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="hospital_id" jdbcType="INTEGER" property="hospitalId" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="outpatient_time" jdbcType="TIMESTAMP" property="outpatientTime" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="is_finish" jdbcType="INTEGER" property="isFinish" />
		<result column="diet_advice" jdbcType="VARCHAR" property="dietAdvice" />
		<result column="doctor_advice" jdbcType="VARCHAR" property="doctorAdvice" />
		<result column="user_defined_sport" jdbcType="VARCHAR" property="userDefinedSport" />
		<result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
		<result column="outpatient_reason" jdbcType="INTEGER" property="outpatientReason" />
	</resultMap>
	<sql id="Base_Column_List">
		id, hospital_id, user_id, outpatient_time, status, is_finish,
		diet_advice, doctor_advice,
		user_defined_sport, finish_time, outpatient_reason
	</sql>
	<select id="findById" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from hospital_outpatient
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from hospital_outpatient
		where id in
		<foreach collection="list" item="outpId" open="(" close=")" separator=",">
			#{outpId}
		</foreach> 
	</delete>
	<insert id="insert" parameterType="com.jumper.weight.nutrition.user.entity.HospitalOutpatient" useGeneratedKeys="true" keyProperty="id">
		insert into hospital_outpatient 
		(
		hospital_id, user_id, outpatient_time, status, is_finish, user_defined_sport, outpatient_reason
		)
		values (
		#{hospitalId,jdbcType=INTEGER},	#{userId,jdbcType=INTEGER},
		#{outpatientTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
		#{isFinish,jdbcType=INTEGER}, #{userDefinedSport,jdbcType=VARCHAR},
		#{outpatientReason,jdbcType=INTEGER}
		)
	</insert>

	<update id="update" parameterType="com.jumper.weight.nutrition.user.entity.HospitalOutpatient">
		update hospital_outpatient
		<set>
			<if test="hospitalId != null">
				hospital_id = #{hospitalId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="outpatientTime != null">
				outpatient_time = #{outpatientTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="isFinish != null">
				is_finish = #{isFinish,jdbcType=INTEGER},
			</if>
			<if test="dietAdvice != null">
				diet_advice = #{dietAdvice,jdbcType=VARCHAR},
			</if>
			<if test="doctorAdvice != null">
				doctor_advice = #{doctorAdvice,jdbcType=VARCHAR},
			</if>
			<if test="userDefinedSport != null">
				user_defined_sport = #{userDefinedSport,jdbcType=VARCHAR},
			</if>
			<if test="finishTime != null">
				finish_time = #{finishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="outpatientReason != null">
				outpatient_reason = #{outpatientReason,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 连表搜索手机号或姓名分页显示门诊列表 -->
	<select id="listOutpatientByQuery" resultMap="BaseResultMap">
		select a.id, a.user_id, a.outpatient_time, a.status, a.outpatient_reason
		from hospital_outpatient as a 
		LEFT JOIN hospital_user_info as b on a.user_id = b.user_id and a.hospital_id = b.hospital_id
		where a.hospital_id = #{hospitalId} and a.is_finish = 0
		<if test="query != null">
			and (b.mobile like CONCAT('%', #{query}, '%') or b.real_name like CONCAT('%', #{query}, '%'))
		</if>
		<if test="status != null">
			and a.status=#{status}
		</if>
		order by a.outpatient_time asc
	</select>
	
	<!-- 查询用户某个医院的初诊记录 -->
	<select id="findUserFirstOutpatient" resultMap="BaseResultMap">
		select * from hospital_outpatient where 
		user_id = #{userId} and hospital_id = #{hospitalId} and status = 0 limit 1
	</select>
	
	<!-- 查询用户某个医院的最新的一条门诊记录 -->
	<select id="findUserLastOutpatient" resultMap="BaseResultMap">
		select id, status, is_finish, finish_time
		from hospital_outpatient where 
		user_id = #{userId} and hospital_id = #{hospitalId}
		<if test="isFinish != null">
			and is_finish = #{isFinish}
		</if>
		order by outpatient_time desc limit 1
	</select>
	
	<!-- 查询医院时间段内的门诊记录 -->
	<select id="listOutPByDuring" resultMap="BaseResultMap">
		select id, user_id, outpatient_time, status, finish_time from hospital_outpatient 
		where is_finish = 1 
		and hospital_id = #{hospitalId}
		and DATE_FORMAT(finish_time,'%Y-%m-%d') <![CDATA[>=]]> #{startDate} 
		and DATE_FORMAT(finish_time,'%Y-%m-%d') <![CDATA[<=]]> #{endDate}
	</select>
	
	<!-- 查询用户已完成的门诊记录 -->
	<select id="listUserOutpatient" resultMap="BaseResultMap">
		select * from hospital_outpatient where
		user_id = #{userId} and hospital_id = #{hospitalId}
		<if test="isFinish != null">
			and is_finish = #{isFinish}
		</if>
		order by outpatient_time desc
	</select>
	
</mapper>