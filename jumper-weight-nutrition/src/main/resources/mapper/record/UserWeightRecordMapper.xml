<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jumper.weight.nutrition.record.mapper.UserWeightRecordMapper">
	<resultMap id="BaseResultMap" type="com.jumper.weight.nutrition.record.entity.UserWeightRecord">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="average_value" property="averageValue"
			jdbcType="DOUBLE" />
		<result column="weight_state" property="weightState" jdbcType="INTEGER" />
		<result column="test_week" property="testWeek" jdbcType="INTEGER" />
		<result column="test_day" property="testDay" jdbcType="INTEGER" />
		<result column="test_time" property="testTime" jdbcType="DATE" />
		<result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
		<result column="basal_metabolism" property="basalMetabolism"
			jdbcType="INTEGER" />
		<result column="body_fat_rate" property="bodyFatRate" jdbcType="DOUBLE" />
		<result column="muscle" property="muscle" jdbcType="DOUBLE" />
		<result column="moisture_content" property="moistureContent"
			jdbcType="DOUBLE" />
		<result column="fat_mass" property="fatMass" jdbcType="DOUBLE" />
		<result column="HBR" property="hbr" jdbcType="INTEGER" />
		<result column="bone_rate" property="boneRate" jdbcType="DOUBLE" />
		<result column="current_identity" property="currentIdentity"
			jdbcType="INTEGER" />
		<result column="business_type" property="businessType"
			jdbcType="INTEGER" />
		<result column="token" property="token" jdbcType="INTEGER" />
		<result column="server_add_time" property="serverAddTime"
			jdbcType="BIGINT" />
		<result column="jid" property="jid" jdbcType="BIGINT" />
		<result column="hospital_id" property="hospitalId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, average_value, weight_state, test_week, test_day, test_time,
		add_time,
		basal_metabolism, body_fat_rate, muscle, moisture_content, fat_mass, HBR, bone_rate,
		current_identity, business_type, token, server_add_time, jid,
		hospital_id
	</sql>
	<select id="findById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from jumper_anglesound.user_weight_record
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<insert id="insert" parameterType="com.jumper.weight.nutrition.record.entity.UserWeightRecord" useGeneratedKeys="true" keyProperty="id">
		insert into jumper_anglesound.user_weight_record 
		(
		user_id, average_value,	weight_state, test_week, test_day,
		test_time, add_time, basal_metabolism, body_fat_rate, muscle, 
		moisture_content, current_identity, hospital_id
		)
		values (
		#{userId,jdbcType=INTEGER},	#{averageValue,jdbcType=DOUBLE},
		#{weightState,jdbcType=INTEGER}, #{testWeek,jdbcType=INTEGER}, 
		#{testDay,jdbcType=INTEGER}, #{testTime,jdbcType=DATE}, 
		#{addTime,jdbcType=TIMESTAMP}, #{basalMetabolism,jdbcType=INTEGER},
		#{bodyFatRate,jdbcType=DOUBLE}, #{muscle,jdbcType=DOUBLE}, 
		#{moistureContent,jdbcType=DOUBLE},	#{currentIdentity,jdbcType=INTEGER},
		#{hospitalId,jdbcType=INTEGER}
		)
	</insert>
	
	<update id="update" parameterType="com.jumper.weight.nutrition.record.entity.UserWeightRecord">
		update jumper_anglesound.user_weight_record
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="averageValue != null">
				average_value = #{averageValue,jdbcType=DOUBLE},
			</if>
			<if test="weightState != null">
				weight_state = #{weightState,jdbcType=INTEGER},
			</if>
			<if test="testWeek != null">
				test_week = #{testWeek,jdbcType=INTEGER},
			</if>
			<if test="testDay != null">
				test_day = #{testDay,jdbcType=INTEGER},
			</if>
			<if test="testTime != null">
				test_time = #{testTime,jdbcType=DATE},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="basalMetabolism != null">
				basal_metabolism = #{basalMetabolism,jdbcType=INTEGER},
			</if>
			<if test="bodyFatRate != null">
				body_fat_rate = #{bodyFatRate,jdbcType=DOUBLE},
			</if>
			<if test="muscle != null">
				muscle = #{muscle,jdbcType=DOUBLE},
			</if>
			<if test="moistureContent != null">
				moisture_content = #{moistureContent,jdbcType=DOUBLE},
			</if>
			<if test="fatMass != null">
				fat_mass = #{fatMass,jdbcType=DOUBLE},
			</if>
			<if test="hbr != null">
				HBR = #{hbr,jdbcType=INTEGER},
			</if>
			<if test="boneRate != null">
				bone_rate = #{boneRate,jdbcType=DOUBLE},
			</if>
			<if test="currentIdentity != null">
				current_identity = #{currentIdentity,jdbcType=INTEGER},
			</if>
			<if test="businessType != null">
				business_type = #{businessType,jdbcType=INTEGER},
			</if>
			<if test="token != null">
				token = #{token,jdbcType=INTEGER},
			</if>
			<if test="serverAddTime != null">
				server_add_time = #{serverAddTime,jdbcType=BIGINT},
			</if>
			<if test="jid != null">
				jid = #{jid,jdbcType=BIGINT},
			</if>
			<if test="hospitalId != null">
				hospital_id = #{hospitalId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 按日期查询是否有某日的体重记录 -->
	<select id="findWeightRecordByDate" resultMap="BaseResultMap">
		select * from jumper_anglesound.user_weight_record where test_time = #{nowDate} and user_id = #{userId} LIMIT 1
	</select>
	
	<!-- 查询用户最近的一条体重记录 -->
	<select id="findUserLastWeight" parameterType="int" resultMap="BaseResultMap">
		select * from jumper_anglesound.user_weight_record where user_id = #{userId} order by add_time desc LIMIT 1
	</select>
	
	<!-- 通过userIds集合查询最近的体重记录 -->
	<select id="listUserLastWeight" parameterType="java.util.List" resultMap="BaseResultMap">
		select user_id, average_value, add_time
		from jumper_anglesound.user_weight_record as t 
		where t.user_id in
		<foreach collection="list" item="userId" open="(" close=")" separator=",">
			#{userId}
		</foreach>
		and t.add_time = (select max(add_time) from jumper_anglesound.user_weight_record where user_id = t.user_id)
	</select>
	
	<!-- 获取日期范围内的体重列表 -->
	<select id="listWeightByDuring" resultMap="BaseResultMap">
		select * from jumper_anglesound.user_weight_record where user_id = #{userId} 
		<if test="startDate != null">
			and DATE_FORMAT(add_time,'%Y-%m-%d') <![CDATA[>=]]> #{startDate}
		</if>
		<if test="endDate != null">
			and DATE_FORMAT(add_time,'%Y-%m-%d') <![CDATA[<=]]> #{endDate}
		</if>
		ORDER BY add_time asc
	</select>
	
	<!-- 连医院用户表查询所有医院用户的最新体重记录 -->
	<select id="listHospUserWeights" resultMap="BaseResultMap">
		select a.id, b.* from hospital_user_info as a,
		(
			select user_id, average_value, add_time
			from jumper_anglesound.user_weight_record as t 
			where t.add_time = (select max(add_time) from jumper_anglesound.user_weight_record where user_id = t.user_id)
		) as b where a.user_id = b.user_id GROUP BY b.user_id
	</select>
	
	<!-- 删除用户体重记录 -->
	<delete id="delete" parameterType="int">
		delete from jumper_anglesound.user_weight_record where id = #{id,jdbcType=INTEGER}
	</delete>
	
</mapper>